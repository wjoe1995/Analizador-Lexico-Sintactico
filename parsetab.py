
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASIGNARleftSUMARESTAleftMULTDIVrightCONCATMOSTRARleftFORASIGNAR CADENA COMDOB CONCAT CORDER CORIZQ DIV ENTERO FOR IDENTIFICADOR LLADER LLAIZQ MODULO MOSTRAR MULT PARDER PARIZQ POTENCIA RESTA SUMAdeclaracion :   MOSTRAR expresionexpresion : ENTERO  FOR  CADENAdeclaracion : CADENA CONCAT CADENA\n    declaracion :  IDENTIFICADOR ASIGNAR expresion\n                |  IDENTIFICADOR ASIGNAR CADENA\n    declaracion : expresion\n    expresion  :   expresion SUMA expresion\n                |   expresion RESTA expresion\n                |   expresion MULT expresion\n                |   expresion DIV expresion\n                |   expresion POTENCIA expresion\n                |   expresion MODULO expresion\n    \n    expresion  :  PARIZQ expresion PARDER\n                | LLAIZQ expresion LLADER\n                | CORIZQ expresion CORDER\n    \n    expresion : ENTERO\n    declaracion : COMDOB expresion COMDOBexpresion : IDENTIFICADOR'
    
_lr_action_items = {'MOSTRAR':([0,],[2,]),'CADENA':([0,19,20,22,],[4,32,34,36,]),'IDENTIFICADOR':([0,2,6,8,9,10,13,14,15,16,17,18,20,],[5,12,12,12,12,12,12,12,12,12,12,12,12,]),'COMDOB':([0,7,12,21,26,27,28,29,30,31,36,37,38,39,],[6,-16,-18,35,-7,-8,-9,-10,-11,-12,-2,-13,-14,-15,]),'ENTERO':([0,2,6,8,9,10,13,14,15,16,17,18,20,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'PARIZQ':([0,2,6,8,9,10,13,14,15,16,17,18,20,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'LLAIZQ':([0,2,6,8,9,10,13,14,15,16,17,18,20,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'CORIZQ':([0,2,6,8,9,10,13,14,15,16,17,18,20,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'$end':([1,3,5,7,11,12,26,27,28,29,30,31,32,33,34,35,36,37,38,39,],[0,-6,-18,-16,-1,-18,-7,-8,-9,-10,-11,-12,-3,-4,-5,-17,-2,-13,-14,-15,]),'SUMA':([3,5,7,11,12,21,23,24,25,26,27,28,29,30,31,33,36,37,38,39,],[13,-18,-16,13,-18,13,13,13,13,-7,-8,-9,-10,13,13,13,-2,-13,-14,-15,]),'RESTA':([3,5,7,11,12,21,23,24,25,26,27,28,29,30,31,33,36,37,38,39,],[14,-18,-16,14,-18,14,14,14,14,-7,-8,-9,-10,14,14,14,-2,-13,-14,-15,]),'MULT':([3,5,7,11,12,21,23,24,25,26,27,28,29,30,31,33,36,37,38,39,],[15,-18,-16,15,-18,15,15,15,15,15,15,-9,-10,15,15,15,-2,-13,-14,-15,]),'DIV':([3,5,7,11,12,21,23,24,25,26,27,28,29,30,31,33,36,37,38,39,],[16,-18,-16,16,-18,16,16,16,16,16,16,-9,-10,16,16,16,-2,-13,-14,-15,]),'POTENCIA':([3,5,7,11,12,21,23,24,25,26,27,28,29,30,31,33,36,37,38,39,],[17,-18,-16,17,-18,17,17,17,17,-7,-8,-9,-10,17,17,17,-2,-13,-14,-15,]),'MODULO':([3,5,7,11,12,21,23,24,25,26,27,28,29,30,31,33,36,37,38,39,],[18,-18,-16,18,-18,18,18,18,18,-7,-8,-9,-10,18,18,18,-2,-13,-14,-15,]),'CONCAT':([4,],[19,]),'ASIGNAR':([5,],[20,]),'FOR':([7,],[22,]),'PARDER':([7,12,23,26,27,28,29,30,31,36,37,38,39,],[-16,-18,37,-7,-8,-9,-10,-11,-12,-2,-13,-14,-15,]),'LLADER':([7,12,24,26,27,28,29,30,31,36,37,38,39,],[-16,-18,38,-7,-8,-9,-10,-11,-12,-2,-13,-14,-15,]),'CORDER':([7,12,25,26,27,28,29,30,31,36,37,38,39,],[-16,-18,39,-7,-8,-9,-10,-11,-12,-2,-13,-14,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaracion':([0,],[1,]),'expresion':([0,2,6,8,9,10,13,14,15,16,17,18,20,],[3,11,21,23,24,25,26,27,28,29,30,31,33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> declaracion","S'",1,None,None,None),
  ('declaracion -> MOSTRAR expresion','declaracion',2,'p_declaracion_mosrar','analizador_sintactico.py',18),
  ('expresion -> ENTERO FOR CADENA','expresion',3,'p_expresion_for','analizador_sintactico.py',22),
  ('declaracion -> CADENA CONCAT CADENA','declaracion',3,'p_declaracion_concat','analizador_sintactico.py',28),
  ('declaracion -> IDENTIFICADOR ASIGNAR expresion','declaracion',3,'p_declaracion_asignar','analizador_sintactico.py',34),
  ('declaracion -> IDENTIFICADOR ASIGNAR CADENA','declaracion',3,'p_declaracion_asignar','analizador_sintactico.py',35),
  ('declaracion -> expresion','declaracion',1,'p_declaracion_expre','analizador_sintactico.py',43),
  ('expresion -> expresion SUMA expresion','expresion',3,'p_expresion_operaciones','analizador_sintactico.py',49),
  ('expresion -> expresion RESTA expresion','expresion',3,'p_expresion_operaciones','analizador_sintactico.py',50),
  ('expresion -> expresion MULT expresion','expresion',3,'p_expresion_operaciones','analizador_sintactico.py',51),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_operaciones','analizador_sintactico.py',52),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion_operaciones','analizador_sintactico.py',53),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_operaciones','analizador_sintactico.py',54),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_expresion_grupo','analizador_sintactico.py',75),
  ('expresion -> LLAIZQ expresion LLADER','expresion',3,'p_expresion_grupo','analizador_sintactico.py',76),
  ('expresion -> CORIZQ expresion CORDER','expresion',3,'p_expresion_grupo','analizador_sintactico.py',77),
  ('expresion -> ENTERO','expresion',1,'p_expresion_numero','analizador_sintactico.py',83),
  ('declaracion -> COMDOB expresion COMDOB','declaracion',3,'p_declaracion_cadena','analizador_sintactico.py',88),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion_nombre','analizador_sintactico.py',92),
]
